@top Sequence {
  (whiteSpace | newLine )* // support empty white space at the beginning of the file before user is typing
  Metadata?
  LoadNGO?
  Parameters?
  Locals?
  expression
}

expression[@isGroup=Expression] {
    Commands | ImmediateCommands | HardwareCommands
}

//
// Sections
//

Commands {
  ((LineComment newLine?) | (!TimeTag(Command)) )+
}

ImmediateCommands {
  "@IMMEDIATE_COMMANDS"( whiteSpace | newLine )? (!TimeTag( Command ))+
}

HardwareCommands {
  "@HARDWARE_COMMANDS"( whiteSpace | newLine )? (!TimeTag( Command ))+
}

Parameters {
  '@INPUT_PARAMS' (whiteSpace+ Parameter newLine?)+ (whiteSpace newLine)?
}
Parameter { identifier }

Locals { '@LOCALS' (whiteSpace+ Local newLine?)+ (whiteSpace newLine)? }
Local { identifier }

LoadNGO { '@LOAD_AND_GO'( whiteSpace | newLine )* }

Command {
  TimeTag? Stem whiteSpace? Args? Description? (newLine? | newLine whiteSpace* ) (
    (Models? Metadata?) | ( Metadata? Models?)
  )?
}

TimeTag { TimeAbsolute | TimeEpoch | TimeRelative  | TimeComplete }
Stem { identifier }
Args {
  (arg whiteSpace? | RepeatArgs whiteSpace?)+
}
RepeatArgs {
  "[" whiteSpace? (RepeatArg whiteSpace?)* "]"
}
RepeatArg {
  "[" whiteSpace? (arg whiteSpace?)* "]"
}
arg { Number | String }

//Description { lineComment }
//Comment { fullLineComment}
//Comments { Comment+ }


Models { Model+ }
Model {
  '@MODEL' whiteSpace Variable whiteSpace Value whiteSpace Offset (whiteSpace | newLine )*
}
Variable { String }
Offset { String }
Value { String | Number | Boolean }

Metadata { MetaEntry+ }
MetaEntry {
  '@METADATA' whiteSpace MetaKey whiteSpace MetaValue (whiteSpace | newLine )*
}
MetaKey { String }
MetaValue { String }


@tokens {
  identifier { @asciiLetter (@asciiLetter| @digit | "_" | "-")* }

  timeHhmmss { @digit@digit":"@digit@digit":"@digit@digit }

  timeDOY { @digit@digit@digit"T"timeHhmmss }

  timeSecond { $[1-9] @digit* }

  TimeAbsolute { 'A'@digit@digit@digit@digit"-"@digit@digit@digit"T"timeHhmmss whiteSpace }

  TimeRelative { 'R'(timeSecond | timeDOY | timeHhmmss) whiteSpace}

  TimeEpoch { 'E'$[+\-]?(timeSecond | timeDOY) whiteSpace}

  TimeComplete { 'C' whiteSpace }

  String { '"' (!["\\] | "\\" _)* '"' }

  hex { @digit | $[A-F] }

  Number {
    ("+" | "-")? (@digit ("_" | @digit)* ("." ("_" | @digit)*)? | "." @digit ("_" | @digit)*)
    (("e" | "E") ("+" | "-")? ("_" | @digit)+)? |
    @digit ("_" | @digit)* "n" |
    "0x" (hex | "_")+ "n"?
  }

  TRUE { "TRUE" }
  FALSE { "FALSE" }

  Boolean { TRUE | FALSE }

  Description { "//"![\n\r]* }

  LineComment { "#"![\n\r]* }

  newLine { "\n"+ | "\r"+ | "\r\n"+ | "\n\r"+ }

  whiteSpace { $[ \t]+ }

  @precedence{ TimeAbsolute, TimeRelative, TimeEpoch, TimeComplete, identifier, LineComment, Description}

}

@precedence {TimeTag }

@detectDelim
